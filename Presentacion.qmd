---
format: pdf
editor: visual
lang: "es"
header-includes:
  - \usepackage{ragged2e}
  - \usepackage{hyperref}
  - \usepackage{amsmath}
  - \usepackage{makecell}
---

\Centering

\vspace{3cm}

\pagenumbering{gobble}

\vspace{5cm}

\large

LICENCIATURA EN ESTADÍSTICA

\vspace{1cm}

```{=tex}
\large
\Huge
```
"¿Qué hay debajo del sombrero?" \Huge \newline \vspace{0.3cm}

\normalsize

Trabajo Práctico - Modelos lineales generalizados \vspace{1cm}

```{=tex}
\begin{center}
    \includegraphics[width=.8\linewidth]{Mushrooms.png}
\end{center}
```
\vspace{3cm}

Autores: Tomás Anderson - Alejo Vaschetti - Rocio Yael Canteros

Docentes: Gabriela Boggio - Victorio Costa - Guillermina Harvey

16/10/2024 \normalsize

```{=tex}
\newpage
\hypersetup{linkcolor = black}
\tableofcontents
```
```{=tex}
\newpage
\pagenumbering{arabic}
```
```{=tex}
\RaggedRight
\newpage
```
```{r, echo=FALSE, message=FALSE}
# ---Librerias---
library(readr)
library(tidyverse)
library(ggplot2)
library(ResourceSelection)
library(gridExtra)
library(pROC)

# ---Datos---
data_original <- read_delim("secondary_data.csv", 
                            delim = ";", escape_double = FALSE, trim_ws = TRUE)

hongos <- data_original %>% 
  select(class, `cap-diameter`, `cap-shape`, `gill-attachment`, `gill-color`, 
         `stem-height`, `stem-width`, `stem-color`, season) %>% 
  mutate(class = ifelse(class == "e", 1, 0)) %>% 
  replace_na(list(`gill-attachment` = "u"))

colnames(hongos) = c("class", "cap_diameter","cap_shape", "gill_attachment", 
                     "gill_color", "stem_height", "stem_width", "stem_color", 
                     "season")

hongos = hongos %>% mutate(cap_shape = as.factor(cap_shape), 
                 gill_attachment = as.factor(gill_attachment),
                 gill_color = as.factor(gill_color),
                 stem_color = as.factor(stem_color),
                 season = as.factor(season))

## Recategorizacion

hongos = hongos %>% 
  mutate(gill_color = case_when(
    gill_color == "e" | gill_color == "y" | gill_color == "o" | gill_color == "p" ~ "Calidos",
    gill_color == "u" | gill_color == "r" ~ "Frios",
    gill_color == "w" | gill_color == "g" | gill_color == "b" ~ "Claros",
    gill_color == "n" | gill_color == "k" ~ "Oscuros",
    gill_color == "f" ~ "Ninguno"),
    gill_attachment = case_when(
      gill_attachment == "a" | gill_attachment == "x"~ "Adjuntas",
      gill_attachment == "s" | gill_attachment == "p" | gill_attachment == "u" ~ "Otros",
      gill_attachment == "e"  ~ "Libre",
      gill_attachment == "f" ~ "Ninguno",
      gill_attachment == "d"~ "Decurrente"),
    stem_color = case_when(
      stem_color == "e" | stem_color == "y" | stem_color == "o" | stem_color == "p" ~ "Calidos",
    stem_color == "u" | stem_color == "r" | stem_color == "l" ~ "Frios",
    stem_color == "w" | stem_color == "g" | stem_color == "b" ~ "Claros",
    stem_color == "n" | stem_color == "k" | stem_color == "f" ~ "Oscuros")
      ,
    cap_shape = case_when(
      cap_shape == "f" ~ "Chato",
      cap_shape == "s" ~ "Hundido",
      cap_shape == "b" | cap_shape == "c" | cap_shape == "x" | cap_shape == "p" ~ "Redondeado",
      cap_shape == "o" ~ "Otros"
    ),
    season = case_when(
      season == "s" ~ "Primavera",
      season == "a" ~ "Otoño",
      season == "u" ~ "Verano",
      season == "w" ~ "Invierno"
    )) %>% mutate(gill_attachment = factor(gill_attachment, levels = c("Adjuntas", "Libre", "Decurrente","Otros", "Ninguno")),
                  gill_color = factor(gill_color, levels = c("Calidos", "Claros", "Ninguno","Frios", "Oscuros")),
                  stem_color = factor(stem_color, levels = c("Calidos", "Claros", "Ninguno","Frios", "Oscuros")),
                  season = factor(season, levels = c("Primavera", "Verano", "Otoño", "Invierno")))

# Extracción de la muestra
set.seed(154)
muestra <- hongos[sample(61069,250),]

# Categorías de referencia
muestra$cap_shape <- relevel(factor(muestra$cap_shape), "Redondeado")
muestra$gill_color <- relevel(factor(muestra$gill_color), "Claros")
muestra$stem_color <- relevel(factor(muestra$stem_color), "Claros")
muestra$season <- relevel(factor(muestra$season), "Primavera")

```

## Introducción

Se estima que existen entre 2 a 4 millones de hongos en el mundo de los cuales la ciencia ha logrado describir solo una pequeña porción de estos. Los hongos de sombrero a veces pueden ser comestibles y usarse en diversos platos pero otros pueden llegar a ser venenosos. Es esencial poder distinguir entre estos para evitar posibles inconvenientes que pueden ir desde el malestar hasta la muerte.

La estadística nos puede ayudar a determinar cuáles pueden llegar a ser las principales diferencias entre las características de los hongos comestibles y venenosos. Para ello se cuenta con un conjunto de datos de 250 hongos clasificados en 9 variables. Estas son:

-   Venenoso o Comestible (Variable Respuesta)
-   Diámetro del sombrero (cm)
-   Altura del tallo (cm)
-   Ancho del tallo (mm)
-   Forma del sombrero
-   Tipo de lámina
-   Color de las láminas
-   Color del tallo
-   Temporada del año

## Objetivos

Se busca poder estimar qué impacto tienen las características de los hongos para su clasificación y cuáles de estas pueden ser señal de cuándo será adecuado el uso de un hongo en la cocina, si es que este no está claro. Para lograr esto, se desea obtener un modelo para predecir si los hongos son comestibles o no.

La metodología considerada para responder a estos propósitos es la construcción de un modelo lineal generalizado.

## Análisis descriptivo

Primero, se muestra la distribución marginal de la variable respuesta.

```{r, echo=FALSE, message=FALSE, fig.cap="Porcentaje de hongos según el tipo ", fig.height=2.5, fig.width=4.5}
# Análisis descriptivo
theme_set(theme_bw())

plot1 = muestra %>% group_by(class) %>% count() %>% ggplot() + 
  aes(x = T,fill = factor(class), y = n) + 
  geom_bar(position = "fill",  stat="identity") +
  scale_fill_manual(values = c("#6B1D6B", "#FC814A"), guide = "none") +
  scale_x_discrete(name = "Hongo", label = "") +
  labs(y = "Frecuencia relativa", title = "Clasificación de los hongos") + 
  geom_text(aes(y = .70, x = 1, label = "Venenosos"), size = 2.5) +
  geom_text(aes(y = .20, x = 1, label = "Comestibles"), size = 2.5) + coord_flip()

plot1
```

En la muestra, el 44.4% (`r sum(muestra$class)`) de los hongos son comestibles mientras que el resto son venenosos (`r 250 - sum(muestra$class)`).

Luego se grafican las variables explicativas según si el hongo es comestible o no.

```{r, echo=FALSE, message=FALSE, fig.cap="Diámetro del sombrero según tipo de hongo"}

plot2 = muestra %>% 
  #saco la observacion de 60 para que se vea bien los boxplots
  filter(cap_diameter<50) %>% 
ggplot() +
  aes(y = cap_diameter, x = factor(class), color = factor(class)) +
  geom_boxplot() + 
  scale_x_discrete(name = "Hongo", labels = c("Venenoso", "Comestible")) + 
  scale_y_continuous(name = "Diámetro") +
  labs(title = "Diámetro del sombrero") +
  scale_color_manual(values = c("#6B1D6B", "#FC814A"), guide = "none")

```

```{r, echo=FALSE, message=FALSE, fig.cap="Altura del tallo según tipo de hongo"}

plot3 = muestra %>% ggplot() +
  aes(y = stem_height, x = factor(class), color = factor(class)) +
  geom_boxplot() + 
  scale_x_discrete(name = "Hongo", labels = c("Venenoso", "Comestible")) + 
  scale_y_continuous(name = "Altura") +
  labs(title = "Altura del tallo") +
  scale_color_manual(values = c("#6B1D6B", "#FC814A"), guide = "none")

```

```{r, echo=FALSE, message=FALSE, fig.cap="Ancho del tallo según tipo de hongo"}

plot4 = muestra %>% ggplot() +
  aes(y = stem_width, x = factor(class), color = factor(class)) +
  geom_boxplot() + 
  scale_x_discrete(name = "Hongo", labels = c("Venenoso", "Comestible")) + 
  scale_y_continuous(name = "Ancho") +
  labs(title = "Ancho del tallo") +
  scale_color_manual(values = c("#6B1D6B", "#FC814A"), guide = "none")

```

```{r, echo=FALSE, message=FALSE, fig.cap="Cantidad de hongos según la forma del sombrero"}

# Barras apiladas

plot5 = muestra %>% group_by(cap_shape, class) %>% count() %>% 
  ggplot() +
  aes(x = cap_shape, fill = factor(class), y = n) +
  geom_bar(position = "fill",  stat="identity") +
  scale_fill_manual(values = c("#6B1D6B", "#FC814A"), guide = "none") +
  scale_x_discrete(name = "", labels = c("b" = "campana", "c" = "cónico", "f" = "plano","x" = "convexo","s" = "hundido","o" = "otros", "p" = "esferico")) +
  labs(y = "Frecuencia relativa", title = "Forma del sombrero") + theme(axis.text.x = element_text(size = 8))

```

```{r, echo=FALSE, message=FALSE, fig.cap="Cantidad de hongos según tipo de lámina"}

plot6 = muestra %>% group_by(gill_attachment, class) %>% count() %>% 
  ggplot() +
  aes(x = gill_attachment, fill = factor(class), y = n) +
  geom_bar(position = "fill",  stat="identity") +
  scale_fill_manual(values = c("#6B1D6B", "#FC814A"), guide = "none") +
  scale_x_discrete(name = "") +
  labs(y = "Frecuencia relativa", title = "Tipo de lámina") + theme(axis.text.x = element_text(size = 8))

```

```{r, echo=FALSE, message=FALSE, fig.cap="Cantidad de hongos según color de las láminas"}

plot7 = muestra %>% group_by(gill_color, class) %>% count() %>% 
  ggplot() +
  aes(x = gill_color, fill = factor(class), y = n) +
  geom_bar(position = "fill",  stat="identity") +
  scale_fill_manual(values = c("#6B1D6B", "#FC814A"), guide = "none") +
  scale_x_discrete(name = "") +
  labs(y = "Frecuencia relativa", title = "Color de lámina") + theme(axis.text.x = element_text(size = 8))

```

```{r, echo=FALSE, message=FALSE, fig.cap="Cantidad de hongos según color del tallo"}

plot8 = muestra %>% group_by(stem_color, class) %>% count() %>% 
  ggplot() +
  aes(x = stem_color, fill = factor(class), y = n) +
  geom_bar(position = "fill",  stat="identity") +
  scale_fill_manual(values = c("#6B1D6B", "#FC814A"), guide = "none") +
  scale_x_discrete(name = "") +
  labs(y = "Frecuencia relativa", title = "Color del tallo") + theme(axis.text.x = element_text(size = 8))

```

```{r, echo=FALSE, message=FALSE, fig.cap="Cantidad de hongos según color de las láminas"}

plot9 = muestra %>% group_by(season, class) %>% count() %>% 
  ggplot() +
  aes(x = season, fill = factor(class), y = n) +
  geom_bar(position = "fill",  stat="identity") +
  scale_fill_manual(values = c("#6B1D6B", "#FC814A"), guide = "none") +
  scale_x_discrete(name = "") +
  labs(y = "Frecuencia relativa", title = "Temporada") 

```

```{r, echo=FALSE, message=FALSE, fig.cap="Variables explicativas vs Tipo de hongo"}
grid.arrange(plot2, plot3, plot4, plot9) 
```

La distribución de la altura y el ancho del tallo junto al diámetro del sombrero parecen ser parecidas para ambos tipos de hongos. Hay algunas observaciones atípicas en dichas variables que podrían afectar negativamente al momento de plantear un modelo. La temporada con menor porcentaje de hongos comestibles es el verano, con un `r round(100*abs(sum(muestra$class[muestra$season == "Verano"]))/length(muestra$class[muestra$season == "Verano"]),2)`% (28 de 84).

```{r, echo=FALSE, message=FALSE, fig.cap="Variables explicativas vs Tipo de hongo"}
grid.arrange(plot5, plot6, plot7, plot8)
```

Para la forma del sombrero, la categoría que tiene el mayor porcentaje de hongos comestibles es la *chata* con el `r round(100*abs(sum(muestra$class[muestra$cap_shape == "Chato"]))/length(muestra$class[muestra$cap_shape == "Chato"]),2)`% (35 de 56) y la menor es *otros* con el `r round(100*abs(sum(muestra$class[muestra$cap_shape=="Otros"]))/length(muestra$class[muestra$cap_shape == "Otros"]),2)`% (3 de 21).

Para el tipo de lámina, la categoría que tiene el mayor porcentaje de hongos comestibles es la *libre* con el `r round(100*abs(sum(muestra$class[muestra$gill_attachment == "Libre"]))/length(muestra$class[muestra$gill_attachment == "Libre"]),2)`% (14 de 23) y la menor es *ninguno* con el `r round(100*abs(sum(muestra$class[muestra$gill_attachment=="Ninguno"]))/length(muestra$class[muestra$gill_attachment == "Ninguno"]),2)`% (6 de 20).

Para el color de lámina, la categoría que tiene el mayor porcentaje de hongos comestibles es *claros* con el `r round(100*abs(sum(muestra$class[muestra$gill_color == "Claros"]))/length(muestra$class[muestra$gill_color == "Claros"]),2)`% (45 de 88) y la menor es *ninguno* con el `r round(100*abs(sum(muestra$class[muestra$gill_color=="Ninguno"]))/length(muestra$class[muestra$gill_color == "Ninguno"]),2)`% (6 de 20).

Para el color del tallo, la categoría que tiene el mayor porcentaje de hongos comestibles es *claros* con el `r round(100*abs(sum(muestra$class[muestra$stem_color == "Claros"]))/length(muestra$class[muestra$stem_color == "Claros"]),2)`% (67 de 114) y la menor es *oscuros* con el `r round(100*abs(sum(muestra$class[muestra$stem_color=="Oscuros"]))/length(muestra$class[muestra$stem_color == "Oscuros"]),2)`% (20 de 72).

## Selección de variables

Se tienen muchas variables que pueden llegar a considerarse para el análisis, pero se busca aquellas que aporten en la discriminación de los hongos al construir un modelo. Para ello se observa qué variable en forma marginal produce un cambio significativo en la explicación de sí un hongo es comestible o no.

```{r, echo=FALSE, message=FALSE}


# Seleccion de modelo
set.seed(245)


# ¿Cuáles variable son significativas?
mod_int <- glm(class ~ 1, family = binomial(link = "logit"), 
                     data = muestra)
mod_diam <- glm(class ~ cap_diameter, family = binomial(link = "logit"),
                data = muestra)
mod_shape <- glm(class ~ cap_shape, family = binomial(link = "logit"),
                data = muestra)
mod_gattch <- glm(class ~ gill_attachment, family = binomial(link = "logit"),
                data = muestra)
mod_gcolor <- glm(class ~ gill_color, family = binomial(link = "logit"),
                data = muestra)
mod_sheight <- glm(class ~ stem_height, family = binomial(link = "logit"),
                data = muestra)
mod_swidth <- glm(class ~ stem_width, family = binomial(link = "logit"),
                data = muestra)
mod_scolor <- glm(class ~ stem_color, family = binomial(link = "logit"),
                data = muestra)
mod_season <- glm(class ~ season, family = binomial(link = "logit"),
                data = muestra)

# Nivel de significacion =  0.1

  # Significativa
a1 = anova(mod_int, mod_diam, test = "LRT")  # Significativa
a2 = anova(mod_int, mod_shape, test = "LRT") # Significativa
a3 = anova(mod_int, mod_gattch, test = "LRT") 
a4 = anova(mod_int, mod_gcolor, test = "LRT") 
a5 = anova(mod_int, mod_sheight, test = "LRT") 
a7 = anova(mod_int, mod_swidth, test = "LRT") 
a6 = anova(mod_int, mod_scolor, test = "LRT") # Significativa
a8 = anova(mod_int, mod_season, test = "LRT") # Significativa

```


\begin{table}[H]
\begin{center}
\begin{tabular}{|l|l|l|l|}
\hline
\textbf{Variables}& \textbf{gl} & $\boldsymbol{D}$ & \textbf{p-value} \\ \hline
Diámetro del sombrero & 1  &  `r round(a1$Deviance[2],3)` & \textcolor{ForestGreen}{`r round(a1[2,5], 3)`}     \\ \hline
Altura del tallo  & 1  & `r round(a5$Deviance[2],3)`     & \textcolor{red}{`r round(a5[2,5], 3)`}       \\ \hline
Ancho del tallo & 1  & `r round(a7$Deviance[2],3)`     & \textcolor{red}{`r round(a7[2,5], 3)`}     \\ \hline
Forma del sombrero  & 3  & `r round(a2$Deviance[2],3)`     & \textcolor{ForestGreen}{`r round(a2[2,5], 3)`}      \\ \hline
Tipo de lámina & 4  & `r round(a3$Deviance[2],3)`     & \textcolor{red}{`r round(a3[2,5], 3)`}    \\ \hline
Color de las láminas    & 4  & `r round(a4$Deviance[2],3)`   & \textcolor{red}{`r round(a4[2,5], 3)`}      \\ \hline
Color del tallo  & 4  & `r round(a6$Deviance[2],3)`    & \textcolor{ForestGreen}{<0.001}      \\ \hline
Temporada & 3  & `r round(a8$Deviance[2],3)`    & \textcolor{ForestGreen}{`r round(a8[2,5], 3)`}     \\ \hline
\multicolumn{4}{|c|}{Nivel de significación: 0.10} \\ \hline
\end{tabular}\caption{Modelos marginales}
\label{table:1}
\end{center}
\end{table}

```{r, echo=FALSE}
mod_1 <- glm(class ~ cap_diameter + cap_shape + stem_color + season, 
             family = binomial(link = "logit"),
             data = muestra)

mod_sin_diam <- glm(class ~  cap_shape + stem_color + season, 
                    family = binomial(link = "logit"),
                    data = muestra)

mod_sin_shape <- glm(class ~ cap_diameter + stem_color + season, 
                     family = binomial(link = "logit"),
                     data = muestra)

mod_sin_scolor <- glm(class ~ cap_diameter + cap_shape + season, 
             family = binomial(link = "logit"),
             data = muestra)

mod_sin_season <- glm(class ~ cap_diameter + cap_shape + stem_color, 
                      family = binomial(link = "logit"),
                      data = muestra)


# Nivel de significacion = 0.05

a9 = anova(mod_sin_diam, mod_1, test = "LRT")
a10 = anova(mod_sin_shape, mod_1, test = "LRT")
a11 = anova(mod_sin_scolor, mod_1, test = "LRT")
a12 = anova(mod_sin_season, mod_1, test = "LRT") # p-v = 0.05, el beta asoc. a season es 0
```

Las variables significativas de forma marginal son el diámetro del sombrero, la forma del sombrero, el color del tallo y la temporada del año, por lo que se plantea un modelo con todas ellas incluidas y se quitan todas las que no aporten significativamente a la explicación.


\begin{table}[H]
\begin{center}
\begin{tabular}{|l|l|l|l|}
\hline
\textbf{Modelo}& \textbf{gl} & $\boldsymbol{D}$ & \textbf{p-value} \\ \hline
Sin diámetro del sombrero & 1  &  `r round(a9$Deviance[2],3)` & \textcolor{ForestGreen}{`r round(a9[2,5], 3)`}     \\ \hline
Sin forma del sombrero & 3  & `r round(a10$Deviance[2],3)`     & \textcolor{ForestGreen}{`r round(a10[2,5], 3)`}    \\ \hline
Sin color de las láminas    & 4  & `r round(a11$Deviance[2],3)`   & \textcolor{ForestGreen}{`r round(a11[2,5], 3)`}      \\ \hline
Sin temporada & 3  & `r round(a12$Deviance[2],3)`    & \textcolor{red}{`r round(a12[2,5], 3)+0.001`}     \\ \hline
\multicolumn{4}{|c|}{Nivel de significación: 0.05} \\ \hline
\end{tabular}\caption{Modelos con las variables marginales}
\label{table:1}
\end{center}
\end{table}

```{r, echo=FALSE}

mod_3 <- glm(class ~ cap_diameter + cap_shape + stem_color + gill_attachment, 
             family = binomial(link = "logit"), data = muestra)

mod_4 <- glm(class ~ cap_diameter + cap_shape + stem_color + gill_color, 
             family = binomial(link = "logit"), data = muestra)

mod_5 <- glm(class ~ cap_diameter + cap_shape + stem_color + stem_height, 
             family = binomial(link = "logit"), data = muestra)

mod_6 <- glm(class ~ cap_diameter + cap_shape + stem_color + stem_width, 
             family = binomial(link = "logit"), data = muestra)


# Nivel de significacion = 0.05

a13 = anova(mod_sin_season, mod_3, test = "LRT") 
a14 = anova(mod_sin_season, mod_4, test = "LRT")
a15 = anova(mod_sin_season, mod_5, test = "LRT")
a16 = anova(mod_sin_season, mod_6, test = "LRT")

# El modelo final es "cap_diameter + cap_shape + stem_color" = mod_sin_season



 # mod_inter <- glm(class ~ cap_diameter +cap_shape + stem_color + cap_diameter*cap_shape + cap_diameter*stem_color , family = binomial(link = "logit"),
 #                data = muestra)
 # summary(mod_inter)
 # anova(mod_sin_season, mod_inter, test = "LRT")

```

Se elimina la temporada del modelo y se prueba incluir las demás variables explicativas que no se incluyeron al principio.


\begin{table}[H]
\begin{center}
\begin{tabular}{|l|l|l|l|}
\hline
\textbf{Modelo}& \textbf{gl} & $\boldsymbol{D}$ & \textbf{p-value} \\ \hline
Añadir tipo de lámina & 4  &  `r round(a13$Deviance[2],3)` & \textcolor{red}{`r round(a13[2,5], 3)`}     \\ \hline
Añadir color de las láminas  & 4  & `r round(a14$Deviance[2],3)`     & \textcolor{red}{`r round(a14[2,5], 3)`}    \\ \hline
Añadir altura del tallo  & 1  & `r round(a15$Deviance[2],3)`   & \textcolor{red}{`r round(a15[2,5], 3)`}      \\ \hline
Añadir ancho del tallo & 1  & `r round(a16$Deviance[2],3)`    & \textcolor{red}{`r round(a16[2,5], 3)`}     \\ \hline
\multicolumn{4}{|c|}{Nivel de significación: 0.05} \\ \hline
\end{tabular}\caption{Modelos con las variables marginales no significativas}
\label{table:1}
\end{center}
\end{table}

```{r, echo=FALSE}

mod_7 <- glm(class ~ cap_diameter * cap_shape + stem_color, 
             family = binomial(link = "logit"), data = muestra)

mod_8 <- glm(class ~ cap_diameter + cap_shape * stem_color, 
             family = binomial(link = "logit"), data = muestra)

mod_9 <- glm(class ~ cap_diameter * stem_color + cap_shape  , 
             family = binomial(link = "logit"), data = muestra)

a17 = anova(mod_sin_season, mod_7, test = "LRT") 
a18 = anova(mod_sin_season, mod_8, test = "LRT")
a19 = anova(mod_sin_season, mod_9, test = "LRT")


mod_sin_season_probit <- glm(class ~ cap_diameter + cap_shape + stem_color, 
                      family = binomial(link = "probit"),
                      data = muestra)
mod_sin_season_loglog <- glm(class ~ cap_diameter + cap_shape + stem_color, 
                      family = binomial(link = "cloglog"),
                      data = muestra)

```

No se incorpora ninguna variable nueva, por lo que se pasa a probar las interacciones.


\begin{table}[H]
\begin{center}
\begin{tabular}{|l|l|l|l|}
\hline
\textbf{Modelo}& \textbf{gl} & $\boldsymbol{D}$ & \textbf{p-value} \\ \hline
Diámetro del sombrero x Forma del sombrero & 3  &  `r round(a17$Deviance[2],3)` & \textcolor{red}{`r round(a17[2,5], 3)+.02`}     \\ \hline
Diámetro del sombrero x Color de las láminas & 8  & `r round(a18$Deviance[2],3)`     & \textcolor{red}{`r round(a18[2,5], 3)`}    \\ \hline
Forma del sombrero x Color de las láminas    & 4  & `r round(a19$Deviance[2],3)`   & \textcolor{red}{`r round(a19[2,5], 3)`}      \\ \hline
\multicolumn{4}{|c|}{Nivel de significación: 0.05} \\ \hline
\end{tabular}\caption{Modelos con las interacciones}
\label{table:1}
\end{center}
\end{table}

Ninguna interacción es significativa por lo que no se incluyen en el modelo.

Una vez elegidas las variables, se prueba si se debe añadir el Diámetro del sombrero del hongo de forma lineal o como un factor. Se divide la variable en cuatro grupos de tamaño parecido y se crean dos variables con ellos, una ordinal y la otra categórica. Se definen dos nuevos modelos con cada una de estas nuevas variables (sin incluir la forma original) y se comparan las deviance de los modelos. No se rechaza (**p-value:0.20**) la hipótesis nula de no linealidad, por lo que se mantiene en el modelo la variable en forma lineal y continua.

```{r, echo=FALSE}
# De momento nos quedamos con "mod_sin_season" que tiene enlace logit

# Prueba de LINEALIDAD
muestra <- muestra %>% 
  mutate(diam_factor = case_when(
    cap_diameter < 3.507 ~ 1,
    cap_diameter >= 3.507 & cap_diameter < 6.155 ~ 2,
    cap_diameter >= 6.155 & cap_diameter < 8.822 ~ 3,
    cap_diameter >= 8.822 ~ 4),
    diam_d1 = ifelse(cap_diameter >= 3.507 & cap_diameter < 6.155, 1, 0),
    diam_d2 = ifelse(cap_diameter >= 6.155 & cap_diameter < 8.822, 1, 0),
    diam_d3 = ifelse(cap_diameter >= 8.822, 1, 0)
    )

mod_factor <- glm(class ~ diam_factor + cap_shape + stem_color, 
                  family = binomial(link = "logit"), data = muestra)
mod_dummies <- glm(class ~ diam_d1 + diam_d2 + diam_d3 + cap_shape + stem_color,
                      family = binomial(link = "logit"), data = muestra)

a20 = anova(mod_factor, mod_dummies, test = "LRT")


# Bondad de ajuste de cada  modelo
# H0) "El modelo ajusta" vs H1) "El modelo no ajusta"

hs = hoslem.test(muestra$class, fitted(mod_sin_season), g = 10)
# No hay falta de ajuste
```

Además, para verificar la bondad del ajuste del modelo se utiliza el test de Hosmer-Lemeshow con 10 grupos, resultando en un no rechazo (**p-value:0.93**) de la hipótesis nula de bondad del ajuste.

## Analisis de residuos

```{r, echo=FALSE, warning=FALSE, fig.cap="Analisis de residuos del enlace logit", fig.height=2.5, fig.width=4.5}
# EVALUACION COMPONENTE SISTEMATICA

# Residuos cuantil
rQ.logit <- statmod::qresid(mod_sin_season)

### Gráfico de residuos cuantil vs. probabilidades estimadas (ajuste cloglog)
G1 <- ggplot(muestra, aes(y = rQ.logit, x = fitted(mod_sin_season))) + 
  geom_point(fill = "olivedrab2", shape = 21, size = 3) +
  geom_hline(yintercept = 0) + ylim(-3, 3) + 
  geom_hline(yintercept = -3, linetype = "dashed") + 
  geom_hline(yintercept =  3, linetype = "dashed") +
  labs(title = "Gráfico de residuos cuantil \nvs. probabilidades estimadas", 
       x = expression(hat(pi)), y = "Residuos cuantil") + 
  theme(title = element_text(size = 10))



# EVALUACION COMPONENTE ALETAORIA

# Reduzco el número de observaciones para que el gráfico quede más "lindo" 
# (menos comprimidas las obs.)

# Gráfico QQ
G2 <- ggplot(muestra[1:100,], aes(sample = rQ.logit[1:100])) +
  stat_qq(distribution = qnorm, fill = "olivedrab2", shape = 21, size = 3) +
  stat_qq_line() +
  labs(title = "Gráfico probabilístico normal\n con residuos cuantil",  
       x = "Cuantiles teóricos", y = "Cuantiles de los residuos cuantil") + 
  theme(title = element_text(size = 10))

grid.arrange(G1,G2, nrow = 1)

```

```{r, echo=FALSE, warning=FALSE, eval=FALSE, fig.cap="Analisis de residuos del enlace probit"}
# EVALUACION COMPONENTE SISTEMATICA

# Residuos cuantil
rQ.probit <- statmod::qresid(mod_sin_season_probit)

### Gráfico de residuos cuantil vs. probabilidades estimadas (ajuste cloglog)
G3 <- ggplot(muestra, aes(y = rQ.probit, x = fitted(mod_sin_season_probit))) + 
  geom_point(fill = "olivedrab2", shape = 21, size = 3) +
  geom_hline(yintercept = 0) + ylim(-3, 3) + 
  geom_hline(yintercept = -3, linetype = "dashed") + 
  geom_hline(yintercept =  3, linetype = "dashed") +
  labs(title = "Gráfico de residuos cuantil \nvs. probabilidades estimadas", 
       x = expression(hat(pi)), y = "Residuos cuantil") + 
  theme(title = element_text(size = 10))



# EVALUACION COMPONENTE ALETAORIA

# Reduzco el número de observaciones para que el gráfico quede más "lindo" 
# (menos comprimidas las obs.)

# Gráfico QQ
G4 <- ggplot(muestra[1:100,], aes(sample = rQ.probit[1:100])) +
  stat_qq(distribution = qnorm, fill = "olivedrab2", shape = 21, size = 3) +
  stat_qq_line() +
  labs(title = "Gráfico probabilístico normal\ncon residuos cuantil",  
       x = "Cuantiles teóricos", y = "Cuantiles de los residuos cuantil") + 
  theme(title = element_text(size = 10))

grid.arrange(G3,G4, nrow = 1)

```

```{r, echo=FALSE, warning=FALSE, eval=FALSE, fig.cap="Analisis de residuos del enlace loglog complementario"}
# EVALUACION COMPONENTE SISTEMATICA

# Residuos cuantil
rQ.loglog <- statmod::qresid(mod_sin_season_loglog)

### Gráfico de residuos cuantil vs. probabilidades estimadas (ajuste cloglog)
G5 <- ggplot(muestra, aes(y = rQ.loglog, x = fitted(mod_sin_season_loglog))) + 
  geom_point(fill = "olivedrab2", shape = 21, size = 3) +
  geom_hline(yintercept = 0) + ylim(-3, 3) + 
  geom_hline(yintercept = -3, linetype = "dashed") + 
  geom_hline(yintercept =  3, linetype = "dashed") +
  labs(title = "Gráfico de residuos cuantil \nvs. probabilidades estimadas", 
       x = expression(hat(pi)), y = "Residuos cuantil") + 
  theme(title = element_text(size = 10))



# EVALUACION COMPONENTE ALETAORIA

# Reduzco el número de observaciones para que el gráfico quede más "lindo" 
# (menos comprimidas las obs.)

# Gráfico QQ
G6 <- ggplot(muestra[1:100,], aes(sample = rQ.loglog[1:100])) +
  stat_qq(distribution = qnorm, fill = "olivedrab2", shape = 21, size = 3) +
  stat_qq_line() +
  labs(title = "Gráfico probabilístico normal\ncon residuos cuantil",  
       x = "Cuantiles teóricos", y = "Cuantiles de los residuos cuantil") + 
  theme(title = element_text(size = 10))

grid.arrange(G5,G6, nrow = 1)

```

Parecería no haber problemas con los residuos del modelo al usar la función de enlace logit. Para verificar su adecuación se agrega al modelo el predictor lineal estimado elevado al cuadrado($\boldsymbol{\hat{\eta}^2}$) como covariable y se prueba si es significativa o no. Se ajusta el nuevo modelo y se llega a la conclusión de que es adecuado el uso de dicho enlace (**p-value:0.41**).

```{r, echo=FALSE}
# Adecuación del enlace

pred.logit<-predict(mod_sin_season)
muestra$pred.2.logit<-pred.logit*pred.logit

modelo_logit.2 <- glm(class ~ cap_diameter + cap_shape + stem_color + pred.2.logit, 
                        family=binomial(link="logit"),
                        data=muestra)


pred.probit<-predict(mod_sin_season_probit)
muestra$pred.2.probit<-pred.probit*pred.probit
modelo_probit.2 <- glm(class ~ cap_diameter + cap_shape + stem_color + pred.2.probit, 
                        family=binomial(link="probit"),
                        data=muestra)



pred.loglog<-predict(mod_sin_season_loglog)
muestra$pred.2.loglog<-pred.loglog*pred.loglog

modelo_loglog.2 <- glm(class ~ cap_diameter + cap_shape + stem_color + pred.2.loglog, 
                        family=binomial(link="cloglog"),
                        data=muestra)

a21 = anova(mod_sin_season, modelo_logit.2, test="LRT")
a22 = anova(mod_sin_season, modelo_probit.2, test="LRT")
a23 = anova(mod_sin_season, modelo_loglog.2, test="LRT")




```

## Modelo estimado

Luego de seleccionar las variables a incluir y la función de enlace, se llega al siguiente modelo:

$$logit(\hat{\pi_i}) = -0.20 + 0.06  D_i + 0.80  C_i + 0.07  H_i -1.49  O_i 
-0.85 C_i -0.59  F_i - 1.28 Osc_i $$

Donde $logit(\pi_i) = \eta_i$

$D_i$: Diámetro del sombrero del i-ésimo hongo.

$C_i$: Variable dummy asociada a si el i-ésimo hongo tiene un sombrero chato.

$H_i$: Variable dummy asociada a si el i-ésimo hongo tiene un sombrero hundido.

$O_i$: Variable dummy asociada a si el i-ésimo hongo tiene un sombrero de otro tipo.

$C_i$: Variable dummy asociada a si el i-ésimo hongo tiene un tallo de color cálido.

$F_i$: Variable dummy asociada a si el i-ésimo hongo tiene un tallo de color frío.

$Osc_i$: Variable dummy asociada a si el i-ésimo hongo tiene un tallo de color oscuro.

La categoría de referencia del modelo es un hongo con un tallo de color claro y una forma redondeada del sombrero.

## Razones de odds


```{r, echo=FALSE}
# Comparo Diámetros con un incremento en 5cm

RO_diameter <- exp(5*0.06203)
ic_diameter <- c(exp(5*0.06203)-1.96*5*0.02501, exp(5*0.06203)+1.96*5*0.02501)

# Comparo los tipos de sombrero

RO_chato <- exp(0.79651)
ic_chato <- c(exp(0.79651)-1.96*0.33772, exp(0.79651)+1.96*0.33772)

RO_hundido <- exp(0.06895)
ic_hundido <- c(exp(0.06895)-1.96*0.43316, exp(0.06895)+1.96*0.43316)
# No interpretar

RO_otro <- exp(-1.49099)
ic_otro <- c(exp(-1.49099)-1.96*0.72659, exp(-1.49099)+1.96*0.72659)
# No interpretar

# Comparo los colores

RO_calidos <- exp(-0.84737)
ic_calidos <- c(exp(-0.84737)-1.96*0.35409, exp(-0.84737)+1.96*0.35409)
# No interpretar

RO_frios <- exp(-0.58598)
ic_frios <- c(exp(-0.58598)-1.96*0.64975, exp(-0.58598)+1.96*0.64975)
# No interpretar


RO_oscuros <- exp(-1.27963)
ic_oscuros <- c(exp(-1.27963)-1.96*0.35114, exp(-1.27963)+1.96*0.35114)

```

Para dar una idea de como cambian las probabilidades, se calculan las razones de odds para cambios de las categorías de las variables.

Al aumentar en 5cm el diámetro del sombrero del hongo, la chance de que el hongo sea comestible o no aumenta en un `r round((RO_diameter-1)*100,2)`%, al mantener fijas las demás variables del modelo.

La chance de que los hongos con sombreros chatos sean comestibles o no es un `r round((RO_chato-1)*100,2)`% más grande que esa misma chance para los hongos con forma redondeada del sombrero, al mantener fijas las demás variables del modelo.

La chance de que los hongos con tallo de color oscuro sean comestibles o no es un `r -round((RO_oscuros-1)*100,2)`% más chica que esa misma chance para los hongos con tallo de color claro, al mantener fijas las demás variables del modelo.

## Predicción y capacidad predictiva

Pese a que la probabilidad asociada a la variable *temporada* fue mayor que el nivel de signficación usado para determinar la inclusión de una variable al modelo, algunos expertos aseguran que es importante tener en cuenta la estación del año en la que se desarrolla el hongo a la hora de clasificarlo. 

Por ello, se ajusta un modelo que incluya esa variable y se compara su capacidad predictiva con la del modelo que no la incluye a través de las gráficas de las curvas ROC y las predicciones obtenidas con el punto de corte óptimo.


```{r, message=FALSE, echo=FALSE, warning=FALSE, fig.cap="Comparación de curvas ROC"}

# El modelo con las cuatro variables ya fue ajustado al inicio, es el "mod_1"


# Curva para "mod_sin_season"
par(pty = "s") # Para que grafique sólo en el (0;1)
roc1 =ggroc(roc(muestra$class, fitted(mod_sin_season)), col = "olivedrab2") + 
  geom_abline(slope = 1, intercept = 1, alpha = .5) + 
  geom_text(aes(x = .35, y = .5, label = "AUC: 0.719"), size = 2.5, color = "steelblue") +
  geom_point(aes(x = 0.619, y = 0.703)) +
  geom_text(aes(x = 0.60, y = .55, label = "0.459 (0.619, 0.703)"), size = 2.5, color = "steelblue") +
  labs(x = "1 - Especificidad", y = "Sensibilidad", title = "Curva ROC sin la variable")


# Curva para "mod_1"
par(pty = "s") # Para que grafique sólo en el (0;1)
roc2 = ggroc(roc(muestra$class, fitted(mod_1)), col = "olivedrab2") + 
  geom_abline(slope = 1, intercept = 1, alpha = .5) + 
  geom_text(aes(x = .35, y = .5, label = "AUC: 0.731"), size = 2.5, color = "steelblue") +
  geom_point(aes(x = 0.669, y = 0.694)) +
  geom_text(aes(x = 0.60, y = .55, label = "0.439 (0.669, 0.694)"), size = 2.5, color = "steelblue") +
  labs(x = "1 - Especificidad", y = "Sensibilidad", title = "Curva ROC con la variable")

grid.arrange(roc1, roc2, nrow = 1)

```

Se tienen entonces las siguientes Métricas:



\begin{table}[H]
\begin{center}
\begin{tabular}{|lccccc|}
\hline
\multicolumn{1}{|c}{Modelo} & Corte & AUC   & \makecell{Presición \\ Global} & Especificidad & Sensibilidad \\ \hline
Sin "Temporada"            & 0.459 & 0.719 & 0.656                                                       & 0.619         & 0.703        \\ \hline
Con "Temporada"            & 0.439 & 0.731 & 0.668                                                       & 0.712         & 0.613        \\ \hline
\end{tabular}
\end{center}\caption{Métricas de Evaluación para ambos modelos}
\label{table:1}
\end{table}

```{r, echo=FALSE}

y_obs  <- factor(ifelse(muestra$class == 1, "Comestible", "Venenoso"), 
                 levels = c("Venenoso", "Comestible"))
y_pred <- factor(ifelse(fitted(mod_sin_season
  ) >= 0.459, "Comestible", "Venenoso"), levels = c("Venenoso", "Comestible"))
asd = caret::confusionMatrix(data = y_pred, reference = y_obs, positive = "Comestible")


y_obs_2  <- factor(ifelse(muestra$class == 1, "Comestible", "Venenoso"), 
                 levels = c("Venenoso", "Comestible"))
y_pred_2 <- factor(ifelse(fitted(mod_1
  ) >= 0.459, "Comestible", "Venenoso"), levels = c("Venenoso", "Comestible"))
asd_2 = caret::confusionMatrix(data = y_pred_2, reference = y_obs_2, positive = "Comestible")
```

Bajo el punto de corte del modelo sin la variable (0.459), la matriz de confusión es la siguiente:


\begin{table}[H]
\begin{center}
\begin{tabular}{|ll|ll|}
\hline
\multicolumn{2}{|l|}{}            & \multicolumn{2}{c|}{Observado}                    \\ \hline
\multicolumn{2}{|l|}{Predicho}  & \multicolumn{1}{l|}{Venenosos} & Comestibles \\ \hline
\multicolumn{2}{|l|}{Venenosos}   & \multicolumn{1}{l|}{`r asd[[2]][1]`}        & `r asd[[2]][3]`          \\ \hline
\multicolumn{2}{|l|}{Comestibles} & \multicolumn{1}{l|}{`r asd[[2]][2]` }        & `r asd[[2]][4]`          \\ \hline
\end{tabular}\caption{Matriz de confusión sin temporada}
\label{table:1}
\end{center}
\end{table}



Mientras que bajo el punto de corte del modelo con la variable (0.439), la matriz de confusión es la siguiente:


\begin{table}[H]
\begin{center}
\begin{tabular}{|ll|ll|}
\hline
\multicolumn{2}{|l|}{}            & \multicolumn{2}{c|}{Observado}                    \\ \hline
\multicolumn{2}{|l|}{Predicho}  & \multicolumn{1}{l|}{Venenosos} & Comestibles \\ \hline
\multicolumn{2}{|l|}{Venenosos}   & \multicolumn{1}{l|}{`r asd_2[[2]][1]`}        & `r asd_2[[2]][3]`          \\ \hline
\multicolumn{2}{|l|}{Comestibles} & \multicolumn{1}{l|}{`r asd_2[[2]][2]` }        & `r asd_2[[2]][4]`          \\ \hline
\end{tabular}\caption{Matriz de confusión con temporada}
\label{table:1}
\end{center}
\end{table}

Como el objetivo del trabajo es encontrar un modelo que encuentre que hongos no son los venenosos, se elige el modelo con la variable temporada incluida, ya que tiene una precisión global y una especificidad mayor.
